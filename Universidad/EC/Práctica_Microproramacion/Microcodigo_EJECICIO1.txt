ld Rdest Rorig {
	co=010000,
	nwords=1,
	Rdest = reg(25,21),
	Rorig = reg(20,16),
	{
		(SELA=10000, T9, SELC=10101, LC=1, A0=1, B=1, C=0) 
		#Carga el Rorig y lo mueve a Rdest
	}
}

ldi Rdest U16 { 
	co=010010,
	nwords=1,
	Rdest = reg(25,21),
	U16 = inm(15,0),
	{
		(SE=0, OFFSET=0, SIZE=10000, T3=1, LC=1, MR=0, SELC=10101, A0=1, B=1, C0=1)
		#Carga el valor inmediato sin extensión de signo y lo carga a Rdest
		#U16 SE=0
	}
}

ld Rdest (Rorig) {
            co=010011,
            nwords=1,
            Rdest = reg(25,21),
            Rorig = reg(20,16),
            {
                (MR=0, SELA=10000, T9=1, C0=1),
                (TA=1, R=1, BW=11, SE=1, M1=1, C1=1),
                (T1=1, LC=1, MR=0, SELC=10101, SE=1, A0=1, B=1, C=0)
	#Selecciona Rorig lo mete en MAR, carga la dirección en la memoria, y pasa el valor asociado a MBR. De ahí lo pasa a Rdest.
            }
}

add_a Rorig {
	co=011000,
  nwords=1,
  Rorig = reg(25,21)
  {
    (MR=0, SELA = 10101, T9=1, C4=1)
    (MR=1, SELB = 100, T10=1, C5=1)
    (MC=1, MR=1, MA=1, MB=1, SELCOP=1010, T6=1, SELC=100, LC=1, SELP=11, M7, C7, A0=1, B=1, C=0)
#Carga Rorig en RT1, carga Registro A(R4) en RT2. Se suman los valores en la ALU y lo carga en el Registro A.
  }
}
addi_a S16 {
  co=011010,
  nwords=1,
  S16 = inm(15,0),
  {
    (SE=1, OFFSET=0, SIZE=10000, T3=1, C5=1)
    (MR=1, SELA=100, T9=1, C4=1)
  	(MC=1, MR=1, MA=1, MB=1, SELCOP=1010, T6=1, SELC=100, LC=1, SELP=11, M7, C7, A0=1, B=1, C=0)
#Carga un valor inmediato con extensión de signo en RT1, carga Registro A(R4) en RT2. Se suman los valores en la ALU y lo carga en el Registro A.
  }
}
inc Rdest{
  co=011100,
  nwords=1,
  Rdest = reg(25,21),
    {
      (MC=1, MR=0, SELA=10101, MA=0, MB=11, SELCOP=1010, T6=1, SELC=10101, LC=1, SELP=11, M7, C7, A0=1, B=1, C=0)
#Coge Rdest, suma 1 en la ALU y lo carga otra vez en Rdest.
    }
}
dec Rdest{
  co=011101,
  nwords=1,
  Rdest = reg(25,21),
#Coge Rdest, resta 1 en la ALU y lo carga otra vez en Rdest.
  {
    (MC=1, MR=0, SELA=10101, MA=0, MB=11, SELCOP=1011, T6=1, SELC=10101, LC=1, SELP=11, M7, C7, A0=1, B=1, C=0)
  }
}
jp S16{
  co=110000,
  nwords=1,
  S16 = address(15,0)rel,  
  {
    (T2=1, C4=1)
    (SE=1, OFFSET=0, SIZE=10000, T3=1, C5=1)
  	(MA=1, MB=01, MC=1, SELCOP=1010, T6=1, M2=0, C2=1, A0=1, B=1, C=0)
	#Es un salto donde PC se le suma un valor inmediato con extensión de signo
	}
}
jpz S16{
  co=110011,
  nwords=1,
  S16 = address(15,0)rel,
  {
    (A0=0,B=1,C=110,MADDR=FTCH),
    (T2=1, C4=1),
    (SE=1, OFFSET=0, SIZE=10000, T3=1, C5=1),
  	(MA=1, MB=01, MC=1, SELCOP=1010, T6=1, M2=0, C2=1),
  	FTCH: (A0=1, B=1, C=0),
    ##Es un salto donde PC se le suma un valor inmediato con extensión de signo si Flags.Zero=0 
  }
}
call U16{
  co=100001,
  nwords=1,
  U16 = inm(15,0),
  {
    (MC=1, SELA=11101 MR=1, MA=0, MB=10, SELCOP=1011, T6=1, LC=1, SELC=11101),
    (T2=1, M1=0, C1=1),
    (MR=1, SELB=11101, T10=1, C0=1),
    (TA=1, TD=1, W=1, BW=11),
    (SE=0, OFFSET=0, SIZE=10000, T3=1, M2=0,C2=1, A0=1, B=1, C=0)
#Añade en pila la dirección de PC y asigna a PC un valor inmediato sin extensión de signo
  }
}
ret{
  co=100010,
  nwords=1,
  {
    (MR=1,SELA=11101,T9=1, C0=1, C4=1),
    (TA=1, R=1, BW=11, SE=1, M1=1, C1=1),
    (T1=1, M2=0, C2=1),
    (MC=1, MR=1, MA=1, MB=10, SELCOP=1010, T6=1, LC=1, SELC=11101, A0=1, B=1, C=0)
#Carga en PC el valor interno en la pila y lo resetea a su origen
  }
}
halt{
  co=100011,
  nwords=1,
  {
    (EXCODE=0, T11=1, M2=0, C2=1, A0=1, B=1, C=0)
    #Lleva PC a 0
  }
}
push Rorig{
  co=100100,
  nwords=1,
  Rorig = reg(25,21),
  {
    (MC=1, SELA=11101 MR=1, LC=1, MA=0, MB=10, SELCOP=1011, T6=1, SELC=11101),
    (MR=0, SELA=10101, T9=1, M1=0, C1=1),
    (MR=1, SELB=11101, T10=1, C0=1),
    (TA=1, TD=1, W=1, BW=11, A0=1, B=1, C=0)
      #Añade a pila el valor de Rorig
  }
}
pop Rdest{
  co=100101,
  nwords=1,
  Rdest = reg(25,21),
  {
    (MR=1,SELA=11101,T9=1, C0=1, C4=1),
    (TA=1, R=1, BW=11, SE=1, M1=1, C1=1),
    (T1=1, LC=1, MR=0, SELC=10101),
    (MC=1, MR=1, MA=1, MB=10, SELCOP=1010, T6=1, LC=1, SELC=11101, A0=1, B=1, C=0)
    #Quita a la pila el valor y carga el valor en Rdest
  }
}
registers
{
        4=A,
        5=BC,
        6=DE,
        7=HL,
        8=IX,
        9=IY,
        29=SP (stack_pointer),
}

